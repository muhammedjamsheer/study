1)Angular material input checking if user is already exits

   component.html
  ---------------
	<div class="col-md-12">
	<mat-form-field class="mat-input" appearance="outline">
		<mat-label>{{ 'roles-form.role_name' | translate }}</mat-label>
		<input (blur)="checkIfUserRoleExists($event.target.value)" matInput
			type="text" formControlName="roleName"
			placeholder="{{ 'roles-form.role_name' | translate }}"
			[ngClass]="{ 'is-invalid': submitted && formfields.roleName.errors }">
	</mat-form-field>
	<span class="invalid-feedback force-show" ng-show="formfields.roleName.errors"
		*ngIf="formfields.roleName.errors  && submitted">{{ 'roles-form.error_msg_rolename_valid' | translate }}</span>
	<span class="invalid-feedback force-show" ng-show="userrole_exists"
		*ngIf="userrole_exists">{{ 'roles-form.error_msg_rolename_exits' | translate}}</span>
   </div>


component.ts
-------------
	userrole_exists = false;

	checkIfUserRoleExists(value) {
		if (value != '') {
			this.userroleService.checkUserRoleExists(value).subscribe(
				response => {
					if (response['status'] === 400) {
						this.userrole_exists = true;
						
					} else {
						this.userrole_exists = false;
					}
				},
				error => {
					this.notifier.notify('error', 'Some error occured');
				}
			);
		}
	}
	if (this.createUserRole.invalid || this.userrole_exists || this.roleshortname_exists) {
		return;
	}
	
	laravel conroller
	...............................
	public function checkIfJournalCodeExists($code)
	    {
		 $res = Journal::where('jnl_code', '=', $code)->first();
		    if ($res === null){
			$status = 200;
			$message = 'New Journal code';
			$message_type = "success";
			return response()->json(compact('status', 'message', 'message_type'), 200);
		    }
		    else{
			$status = 400;
			$message = 'Journal code already exists';
			$message_type = "error";
			return response()->json(compact('result', 'status', 'message', 'message_type'), 200);
		    }
	    }
    
========================================================================================================

2) Angular search a table
   component.html
   --------------
   <input type="text" (keyup)='search($event.target.value)'>
   
   component.ts
   -------------
   search(term: string) {
    if(!term) {
      this.filterData = this.data;
    } else {
      this.filterData = this.data.filter(x => 
         x.name.trim().toLowerCase().includes(term.trim().toLowerCase())
      );
    }
  }	
