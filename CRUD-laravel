====================================view.blade.php==================================================


<!DOCTYPE html>
<html>

<style>
.container{
    margin-top:30px;
}
.error {
  color: red;
  margin-left: 5px;
}
 
label.error {
  display: inline;
}
.delete{
    cursor:pointer;
}
.rowtable{
    width:300px;
}
</style>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/jquery.validate.js"></script>  
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/additional-methods.min.js"></script>


	<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <link href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet">
    <meta name="csrf-token" content="{{ csrf_token() }}" />

    
</head>
<body>
    <div class="container">

<button type="button" onclick="newFunction()" class="btn btn-primary float-right" data-toggle="modal" data-target="#myModal">
  Open modal
</button>

<div class="col-lg-8">
    <div class="form-group">
      <input type="text" name="search" id="search" class="form-control" placeholder="Search Customer Data" />
     </div>
    <table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th >Action</th>
        </tr>
    </thead>
        <tbody>
        </tbody>
    </table>
</div>

<!-- adding modal -->
<div class="modal" id="myModal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
         <h4 id="modelHeading" class="modal-title">Add item</h4> 
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
      <div class="modal-body">
      <form id="ajax_form" >
            <div class="form-group">
                <label>Name:</label>
                <input type="text" name="name" id="name" class="form-control" placeholder="Name" >
            </div>
            <div class="form-group">
                <label>mobile number:</label>
                <input type="text" name="mobile_number"  id="mobile_number" class="form-control" placeholder="mobile number">
            </div>
            <div class="form-group">
                <strong>Email:</strong>
                <input type="text" name="email"  id="email" class="form-control" placeholder="Email" >
            </div>
            <div class="form-group">
                <strong>Password:</strong>
                <input type="password" name="password"  id="password" class="form-control" placeholder="Password" >
            </div>
            <div class="form-group">

               <input type="hidden"  name="items_id"  id="items_id"  >
                <button id="saveBtn" class="btn btn-success btn-submit">Submit</button>
            </div>
        </form>
      </div>
    </div>
  </div>
</div>

</body>
<script type="text/javascript">

    function newFunction() {
        document.getElementById("ajax_form").reset();
        $('#modelHeading').html("Add User");
         $('#saveBtn').val("Submit");
        }


    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });
 
    $("#ajax_form").validate({
    rules: {
      name: {
        required: true,
        maxlength: 50
      },
       mobile_number: {
            required: true,
            digits:true,
            minlength: 4,
            maxlength:12,
        },
        email: {
                required: true,
                maxlength: 50,
                email: true,
            },
        password: {
            required: true,

        },    
    },
    messages: {
      name: {
        required: "Please enter name",
        maxlength: "Your last name maxlength should be 50 characters long."
      },
      mobile_number: {
        required: "Please enter contact number",
        minlength: "The contact number should be 10 digits",
        digits: "Please enter only numbers",
        maxlength: "The contact number should be 12 digits",
      },
      email: {
          required: "Please enter valid email",
          email: "Please enter valid email",
          maxlength: "The email name should less than or equal to 50 characters",
        },
        password: {
          required: "Please enter password",
        },
         
    },
        submitHandler: function(form) {
        $.ajax({
                type:'POST',
                url:'/ajaxRequest',
                data: $('#ajax_form').serialize(),
                success:function(data){
                    if(data.status=200){
                        getData();
                        toastr.success(data.message, 'Success Alert', {timeOut: 2000});
                        $('#myModal').modal('hide');
                        
                       
                    }
                }
                });
            }
        });

    $(document).on('keyup', '#search', function(){
        var query = $(this).val();
        getData(query);
    });
  
        getData();
        function getData(query='') {
                $.ajax({
                type:'get',
                url:'/getallitems',
                data:{query:query},
                dataType:'json',
                success:function(data){

                    var	rows = '';
                    $.each (data, function (key, value) {
                        rows = rows + '<tr>';
                        rows = rows + '<td>'+value.name+'</td>';
                        rows = rows + '<td>'+value.email+'</td>';
                        rows = rows + '<td  data-id="'+value.id+'">';
                        rows = rows + '<button data-toggle="modal" data-target="#edit-item" class="edit-item">Edit</button> ';
                        rows = rows + '<button class=" remove-item">Delete</button>';
                        rows = rows + '</td>';
                        rows = rows + '</tr>';
                        });

                        $('tbody').html(rows);
                    }
                });
            }

            $("body").on("click",".remove-item",function(){

                var id = $(this).parent("td").data('id');
                console.log(id)
                $.ajax({
                    type:'get',
                    url:'/deleteitems/'+id,
                    success:function(data){
                        if(data.status=200){
                            getData();
                            toastr.success('deleted succesfully', 'Success Alert', {timeOut: 2000});
                        }
                    }
                    });
            });

            $("body").on("click",".edit-item",function(){
                var id = $(this).parent("td").data('id');
            
                $.ajax({
                    type:'get',
                    url:'/edititems/'+id,
                    success:function(data){
                        if(data.status=200){

                    $('#myModal').modal('show'); 
                    $('#modelHeading').html("Edit User");
                    $('#saveBtn').html("Update");
                
                    $('#name').val(data.name);
                    $('#email').val(data.email);
                    $('#mobile_number').val(data.mobile);
                    $('#password').val(data.password);
                    $('#items_id').val(data.id);
                        }
                    }
                });
            });


</script>
</html>


==============================  routes /web ================================================

Route::get('items', 'ItemController@viewItem');
Route::post('/ajaxRequest', 'ItemController@saveitems');
Route::get('/getallitems', 'ItemController@getallitems');
Route::get('deleteitems/{id}', 'ItemController@deleteitems');
Route::get('edititems/{id}', 'ItemController@edititems');

==============================  controller ================================================
<?php
namespace App\Http\Controllers;
use Illuminate\Http\Request;
use App\Items;
use Validator;
use DB;
class ItemController extends Controller
{
    public function viewItem() {
        return view('viewitem');
    }
    public function saveitems(Request $request)
    {
        $validator = Validator::make($request->all(), [
            'name'=>'required',
            'email'=>'required',   
            'password'=>'required', 
            'mobile_number'=>'required',   
        ]);

        if ($validator->fails()) {
            $message =  'Items  not added Succesfully';
            $status = 402;
            $message_type = "warning";
            return response()->json(compact('status', 'message', 'message_type'), 200);
        }else{
            $form_data = array(
                'name'=>$request['name'], 
                'email'=>$request['email'], 
                'password' => $request['password'],
                "mobile" => $request['mobile_number'],

            );
            if($request->items_id){
                $update =  Items::where('id', $request->items_id)->update( $form_data);
                if($update){
                    $status = 204; 
                    $message = 'Journal Updated succesfully';
                    $message_type = "success";
                    return response()->json(compact('status', 'message', 'message_type'), 200);
                  }
            }
            else{
                $create = Items::create($form_data);
                if($create){
                    $status = 200; 
                    $message = 'Created journal succesfully';
                    $message_type = "success";
                    return response()->json(compact('status', 'message', 'message_type'), 200);
                  }
            }
        }
    }
    public function getallitems(Request $request)
    {
        if($request->ajax())
        {
         $output = '';
         $query = $request->get('query');
         if($query != '')
         {

          $data = DB::table('items')
            ->where('name', 'like', '%'.$query.'%')
            ->orWhere('email', 'like', '%'.$query.'%')
            ->orWhere('mobile', 'like', '%'.$query.'%')
            ->orderBy('name', 'desc')
            ->get();
         }
         else
         {
          $data = DB::table('items')
            ->orderBy('name', 'asc')
            ->get();
         }

     return response()->json( $data,200);
    }
  }
    public function deleteitems($id)
    {
       $data=Items::where('id',$id)->first();
       $data->delete();
       return response()->json( $data,200);
    }
    public function edititems($id)
    {
       $data=Items::where('id',$id)->first();
       return response()->json( $data,200);
    }
}

========================= model ================================

class Items extends Model
{
    protected $table = 'items';
    protected $fillable = [
        'name', 'email', 'password','mobile'
    ];
}
















Laravel api
.................................................................................
Route::post('create_employee', 'employeeController@create_employee');
Route::get('delete_employee/{id}', 'employeeController@delete_employee');

Laravel controller
...............................................................................
use App\Employee;
use validate;

  public function add_employee(Request $request)
    {

        request()->validate([
            'image' => 'required|image|mimes:jpeg,png,jpg,gif,svg|max:2048',
        ]);
        $imageName = time().'.'.request()->image->getClientOriginalExtension();
        request()->image->move(public_path('images'), $imageName);

        $form_data = array(
            'name'            => $request->firstName,
            'mobile'          =>  $request->mobile,
            'address'         =>  $request->address,
            'image'           =>   $imageName,
            );
            $data = Employee::create($form_data);
            $results['message_type'] = 'success';
            $results['message'] = 'Employee created succesfully';
            return response()->json($results, 200);

           if( $request->input('movie_id')){//editing
            $data =  Movies::where('id', $request->movie_id)->update( $form_data);
            }
    }
    public function getall_employees()
    {
        $data = Employee::get();
          return response()->json($data);
    }
    public function employees_edit($id)
    {
         $movies = Employee::with('district')->where('id',$id)->first();
          return response()->json( $movies);
    }
    public function delete_employee($id){
    	$data = Employee::where('id',$id)->first();

    	$image_path = 'images/'.$data['image']; 

    	if(file_exists(public_path('images/'.$data['image']))){
    		unlink(public_path('images/'.$data['image']));
    	}else{
    		dd('File does not exists.');
    	}
    	$data->delete();
    	if($data){
    		$results['message_type'] = 'success';
    		$results['message'] = 'Employee deleted succesfully';
    	}
    	return response()->json( $results);
    }


.........................................................
Laravel Model

   public $table='employees';
    protected $fillable = [
     'name','mobile',
    ];
    public function screen(){
        return $this->belongsTo('App\Screen','screen_id','id');
    }
     public function district(){
        return $this->hasMany('App\theater','location','id');
    }
